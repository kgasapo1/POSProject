package database;

import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;

public class Insert_Sale extends javax.swing.JFrame {

    /**
     * Creates new form Insert_Sale
     */
    public Insert_Sale() {
        initComponents();
        mySettings();
        formLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtOrderUnitPrice = new javax.swing.JTextField();
        txtOrderProductID = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        txtOrderProductName = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        optRegular = new javax.swing.JRadioButton();
        optSpecial = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtOrderQuantity = new javax.swing.JComboBox<>();
        txtOrderSubtotal = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtOrderDiscount = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtOrderTotal = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        btnCompute = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setTitle("ORDERING FORM");
        setResizable(false);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Product ID");

        jLabel20.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel20.setText("Unit Price");

        txtOrderUnitPrice.setEditable(false);
        txtOrderUnitPrice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtOrderUnitPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOrderUnitPrice.setToolTipText("");

        txtOrderProductID.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtOrderProductID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        txtOrderProductID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	txtOrderProductIDActionPerformed(evt);
            }
        });
        
        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Date :");

        lblDate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblDate.setText(" ");

        btnSubmit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setText("Product Name");

        btnReset.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        txtOrderProductName.setEditable(false);
        txtOrderProductName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtOrderProductName.setToolTipText("");

        btnBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Customer Type");

        buttonGroup1.add(optRegular);
        optRegular.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        optRegular.setText("Regular");

        buttonGroup1.add(optSpecial);
        optSpecial.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        optSpecial.setText("Special");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("First name");

        txtFirstName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtFirstName.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Last name");

        txtLastName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtLastName.setToolTipText("");

        jLabel21.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel21.setText("Quantity");

        txtOrderQuantity.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtOrderQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        txtOrderQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	txtOrderQuantityActionPerformed(evt);
            }
        });

        txtOrderSubtotal.setEditable(false);
        txtOrderSubtotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtOrderSubtotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOrderSubtotal.setToolTipText("");

        jLabel22.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel22.setText("Sub-total");

        txtOrderDiscount.setEditable(false);
        txtOrderDiscount.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtOrderDiscount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOrderDiscount.setToolTipText("");

        jLabel23.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel23.setText("Discount");

        
        txtOrderTotal.setEditable(false);
        txtOrderTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtOrderTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOrderTotal.setToolTipText("");

        jLabel24.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel24.setText("Total Price");

        btnCompute.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCompute.setText("Compute");
        btnCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComputeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel2.setText("ORDER FORM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(optRegular, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(optSpecial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtOrderSubtotal, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtOrderDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtOrderQuantity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtLastName)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel4)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtOrderProductName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOrderProductID, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtOrderUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSubmit)
                        .addGap(18, 18, 18)
                        .addComponent(btnCompute)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(optRegular, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optSpecial, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName)
                    .addComponent(txtLastName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtOrderProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtOrderProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtOrderUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtOrderQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtOrderSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrderDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCompute))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>   
    
    private void txtOrderProductIDActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	try{
        	try{
        		Class.forName("com.mysql.jdbc.Driver").newInstance();
        	    Connection co = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
        	    Statement stm = co.createStatement();
        		String sql = "Select * from item1 where product_id = '"+ txtOrderProductID.getSelectedItem()+"'";
        		ResultSet rs = stm.executeQuery(sql);
        		while(rs.next())
        		{
        			String productName = rs.getString("product_name");
        			txtOrderProductName.setText(productName);
        			String productPrice = rs.getString("price");
        			txtOrderUnitPrice.setText(productPrice);
        			int productStock = Integer.parseInt(rs.getString("stock_in_hand"));
        			txtOrderQuantity.removeAllItems();
            		for(int i = 1; i <= productStock; i++){
            			txtOrderQuantity.addItem(Integer.toString(i));
            		}
        		}
        	}
        	catch(Exception e)
        	  {
        	      JOptionPane.showMessageDialog(this,"Error in connectivity" );
        	  }  
        	}
        	catch(Exception e)
        	{
        	    JOptionPane.showMessageDialog(null,"Invalid Entry","message",2); 
        	}
    }
    
    private void txtOrderQuantityActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    } 

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	try{
    		int mp = Integer.valueOf((String)txtOrderQuantity.getSelectedItem());
    		String mn = (String) txtOrderProductID.getSelectedItem();
    		int ms = 0;
    		try{
    			Class.forName("com.mysql.jdbc.Driver").newInstance();
    		    Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
    		    Statement stmt = con.createStatement();
    		    String quer = "SELECT * FROM item1 where product_id = '"+mn+"';";
    		    ResultSet rs = stmt.executeQuery(quer);
    		    while(rs.next()) 
    		    {ms = rs.getInt("stock_in_hand");}
    		    ms = ms - mp;
    		    String my = "" + ms;
    		    String query = "update item1 set Stock_in_hand = '"+ my +"'where product_id = '"+ mn +"';";
    		    Statement stm = con.createStatement();
    		    int rv = stm.executeUpdate(query);
    		    rs.close(); 
    		   
    		     stmt.close();
    		     stm.close();
    		     con.close();
    		}
    		catch(Exception b)
            {
                 JOptionPane.showMessageDialog(this,"Enter Data Correctly");
            }
    		String mt = "";
    		   if(optRegular.isSelected() == true)
    		    {
    		        mt = "Regular";
    		       
    		    }
    		   else if(optSpecial.isSelected() == true)
    		    {
    		         mt = "Discounted";
    		       
    		    }
    		    else
    		    {
    		    	optRegular.setSelected(true);
    		        mt = "Regular";
    		    }
    		try{
    			Class.forName("com.mysql.jdbc.Driver").newInstance();
    			Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
    			Statement stmt = con.createStatement();
    			String query = "Insert into item3(selling_date, customer_type, customer_name, product_id, product_name, product_price, customer_quantity, customer_subtotal, customer_discount, customer_total) values('"+lblDate.getText()+"', '"+mt+"', '"+txtLastName.getText()+", "+txtFirstName.getText()+"', '"+mn+"', '"+txtOrderProductName.getText()+"', '"+txtOrderUnitPrice.getText()+"', '"+mp+"', '"+txtOrderSubtotal.getText()+"', '"+txtOrderDiscount.getText()+"', '"+txtOrderTotal.getText()+"');";
    			stmt.executeUpdate(query);
    			JOptionPane.showMessageDialog(this,"Record has been inserted");
    			stmt.close();
    			con.close();
    			txtOrderProductID.setSelectedItem(null);
    			txtOrderProductName.setText(null);
    			txtOrderUnitPrice.setText(null);
    			txtOrderQuantity.setSelectedItem(null);
    			txtOrderSubtotal.setText(null);
    			txtOrderDiscount.setText(null);
    			txtOrderTotal.setText(null);
    		}
    		catch(Exception b)
    		{
    			JOptionPane.showMessageDialog(this,"Invalid Entry or data is too long in any field");
    		} 
    	}
    	catch(Exception mj )
    	{
    		JOptionPane.showMessageDialog(this, "Please Enter Data Correctly");
    	}
    }                                         

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	optRegular.setSelected(false);
    	optSpecial.setSelected(false);
    	txtFirstName.setText(null);
    	txtLastName.setText(null);
    	txtOrderProductID.setSelectedItem(null);
    	txtOrderProductName.setText(null);
    	txtOrderUnitPrice.setText(null);
    	txtOrderQuantity.setSelectedItem(null);
    	txtOrderSubtotal.setText(null);
    	txtOrderDiscount.setText(null);
    	txtOrderTotal.setText(null);
    }                                        

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        dispose();
    }                                       

    private void btnComputeActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    	double mj = Integer.parseInt(txtOrderUnitPrice.getText());
    	int mk = Integer.valueOf((String)txtOrderQuantity.getSelectedItem());
    	double ml = mj * mk;
    	double mm = 0.00;
    	txtOrderSubtotal.setText("" + ml);
    	if(optRegular.isSelected() == true)
    	{
    		mm = 0.00;
    	}
    	else if(optSpecial.isSelected() == true)
    	{
    		mm = 0.20;
    	}
    	else
    	{
    		optRegular.setSelected(true); 
    	}
    	double mn = ml * mm;
    	txtOrderDiscount.setText("" + mn);
    	double mo = ml - mn;
    	txtOrderTotal.setText("" + mo);
    }
    
    public void mySettings(){
        Dimension windowSize = getSize();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Point centerPoint = ge.getCenterPoint();

        int dx = centerPoint.x - windowSize.width / 2;
        int dy = centerPoint.y - windowSize.height / 2;    
        setLocation(dx, dy);
    }
    
    public void formLoad(){
    	try{
    		Class.forName("com.mysql.jdbc.Driver").newInstance();
    	    Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
    	    Statement stmt = con.createStatement();
    		String sql = "Select CURRENT_DATE() AS Date";
    		ResultSet rs = stmt.executeQuery(sql);
    		while(rs.next())
    		{
    			String todayDate = rs.getString("Date");
    			lblDate.setText(todayDate);
    		}
    		rs.close();
    		stmt.close();
    		con.close();
    	}
    	catch(Exception e)
    	{
    		JOptionPane.showMessageDialog(this, "Error in connectivity");
    	}
    	try{
    		Class.forName("com.mysql.jdbc.Driver").newInstance();
    	    Connection co = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
    	    Statement stm = co.createStatement();
    		String sql = "Select product_id from item1 where NOT stock_in_hand = '0'";
    		ResultSet rs = stm.executeQuery(sql);
    		while(rs.next())
    		{
    			txtOrderProductID.addItem(Integer.toString(rs.getInt("product_id")));
    			txtOrderProductID.setSelectedItem(null);
    			txtOrderProductName.setText(null);
    			txtOrderUnitPrice.setText(null);
    			txtOrderQuantity.setSelectedItem(null);
    		}
    	}
    	catch(Exception e)
    	{
    		JOptionPane.showMessageDialog(this,"Error in connectivity" );
    	}  
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Insert_Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Insert_Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Insert_Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Insert_Sale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Insert_Sale().setVisible(true);
            }
        });
    }

 // Variables declaration - do not modify                     
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompute;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblDate;
    private javax.swing.JRadioButton optRegular;
    private javax.swing.JRadioButton optSpecial;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtOrderDiscount;
    private javax.swing.JComboBox<String> txtOrderProductID;
    private javax.swing.JTextField txtOrderProductName;
    private javax.swing.JTextField txtOrderSubtotal;
    private javax.swing.JTextField txtOrderTotal;
    private javax.swing.JTextField txtOrderUnitPrice;
    private javax.swing.JComboBox<String> txtOrderQuantity;
    // End of variables declaration                   
}
