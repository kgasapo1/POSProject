package database;

import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.JOptionPane;

public class Update_Product extends javax.swing.JFrame {

    /**
     * Creates new form Update_Product
     */
    public Update_Product() {
        initComponents();
        mySettings();
        formLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnReset = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        txtProductID = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setTitle("UPDATE PRODUCT");
        setResizable(false);

        btnReset.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Price");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Stock-in-hand");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel2.setText("UPDATE PRODUCT");

        txtName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPrice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Name");

        txtStock.setEditable(false);
        txtStock.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btnSubmit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        txtProductID.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtProductID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        txtProductID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	txtProductIDActionPerformed(evt);
            }
        });
        
        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Product ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(btnSubmit)
                .addGap(18, 18, 18)
                .addComponent(btnReset)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProductID)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPrice)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtStock)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>                       

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	try{  String mk = (String) txtProductID.getSelectedItem();
    	String ml = txtName.getText();
    	String mj = txtPrice.getText();
    	 String md = txtStock.getText();
    	  try{
    	     Class.forName("com.mysql.jdbc.Driver").newInstance();
    	     Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
    	     Statement stmt = con.createStatement();
    	     int bp = JOptionPane.showConfirmDialog(this,"Do you want to update the record ?");
    	     if(bp == JOptionPane.YES_OPTION){
    	        String query = "update item1 set product_name = '"+ml+"', price = '" + mj+"', stock_in_hand = '"+ md +"'where product_id = '"+ mk+"';";
    	    stmt.execute(query); 
    	     JOptionPane.showMessageDialog(this,"Record has been updated");
    	     txtProductID.setSelectedItem(null);
    	     txtName.setText(null);
    	     txtPrice.setText(null);
    	     txtStock.setText(null);
    	     }
    	     if(bp == JOptionPane.CANCEL_OPTION){
    	         dispose(); 
    	         Update_Product a = new Update_Product();
    	         a.setVisible(true); 
    	     }
    	      if(bp == JOptionPane.NO_OPTION){
    	    	 dispose(); 
     	         Update_Product a = new Update_Product();
     	         a.setVisible(true); 
    	     }
    	     stmt.close();
    	     con.close();
    	  }
    	  catch(Exception e)
    	  {
    	      JOptionPane.showMessageDialog(this,"Error in connectivity" );
    	  }  
    	}
    	catch(Exception e)
    	{
    	    JOptionPane.showMessageDialog(null,"Invalid Entry","message",2); 
    	}
    }                                         

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	txtProductID.setSelectedItem(null);
    	txtName.setText(null);
    	txtPrice.setText(null);
    	txtStock.setText(null);
    }                                        

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    	dispose();
    }                                       

    private void txtProductIDActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    	try{
        	try{
        		Class.forName("com.mysql.jdbc.Driver").newInstance();
        	    Connection co = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
        	    Statement stm = co.createStatement();
        		String sql = "Select * from item1 where product_id = '"+ txtProductID.getSelectedItem()+"'";
        		ResultSet rs = stm.executeQuery(sql);
        		while(rs.next())
        		{
        			String itemName = rs.getString("product_name");
        			txtName.setText(itemName);
        			String itemPrice = rs.getString("price");
        			txtPrice.setText(itemPrice);
        			String itemStock = rs.getString("stock_in_hand");
        			txtStock.setText(itemStock);
        		}
        	}
        	catch(Exception e)
        	  {
        	      JOptionPane.showMessageDialog(this,"Error in connectivity" );
        	  }  
        	}
        	catch(Exception e)
        	{
        	    JOptionPane.showMessageDialog(null,"Invalid Entry","message",2); 
        	}
    }
    
    public void mySettings(){
        Dimension windowSize = getSize();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Point centerPoint = ge.getCenterPoint();

        int dx = centerPoint.x - windowSize.width / 2;
        int dy = centerPoint.y - windowSize.height / 2;    
        setLocation(dx, dy);
    }
    
    public void formLoad(){
    	try{
    		Class.forName("com.mysql.jdbc.Driver").newInstance();
    	    Connection co = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
    	    Statement stm = co.createStatement();
    		String sql = "Select product_id from item1 order by product_id ASC";
    		ResultSet rs = stm.executeQuery(sql);
    		while(rs.next())
    		{
    			txtProductID.addItem(Integer.toString(rs.getInt("product_id")));
    		}
    	}
    	catch(Exception e)
    	{
    		JOptionPane.showMessageDialog(this,"Error in connectivity" );
    	}
    	txtProductID.setSelectedItem(null);
    	txtName.setText(null);
    	txtPrice.setText(null);
    	txtStock.setText(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update_Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update_Product().setVisible(true);
            }
        });
    }

 // Variables declaration - do not modify                     
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JComboBox<String> txtProductID;
    private javax.swing.JTextField txtStock;
    // End of variables declaration                   
}
