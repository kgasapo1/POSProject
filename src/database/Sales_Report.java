package database;

import java.awt.Dimension;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Sales_Report extends javax.swing.JFrame {

    /**
     * Creates new form Sales_Report
     */
    public Sales_Report() {
        initComponents();
        mySettings();
        formLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

    	jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblWeekly = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblDaily = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblMonthly = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblAnnual = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblDailyDate = new javax.swing.JLabel();
        lblWeeklyDate = new javax.swing.JLabel();
        lblMonthlyDate = new javax.swing.JLabel();
        lblAnnualDate = new javax.swing.JLabel();

        setTitle("UPDATE EMPLOYEE");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel2.setText("SALES REPORT");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Daily Sales ");

        lblWeekly.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblWeekly.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Weekly Sales ");

        lblDaily.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblDaily.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Monthly Sales ");

        lblMonthly.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblMonthly.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Annual Sales ");

        lblAnnual.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblAnnual.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        btnUpdate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblDailyDate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        lblWeeklyDate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        lblMonthlyDate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        lblAnnualDate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAnnual, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAnnualDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(lblMonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(22, 22, 22)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblWeekly, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblDaily, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblDailyDate, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblWeeklyDate, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMonthlyDate, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))
                            .addComponent(jLabel2))
                        .addGap(53, 53, 53))))
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(btnUpdate)
                .addGap(48, 48, 48)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(lblDailyDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDaily, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblWeeklyDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWeekly, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblMonthlyDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblAnnualDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAnnual, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnBack))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold> 
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        try {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
                Statement stmt = con.createStatement();
                String query = "SELECT SUM(customer_total) AS Total FROM item3 WHERE selling_date = CURRENT_DATE();";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next())
                {
                    String dailySales = rs.getString("Total");
                    lblDaily.setText("Php " + dailySales + ".00");
                }

                rs.close();
                stmt.close();
                con.close();

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,"Error in connectivity");
            }
        try {
            	Class.forName("com.mysql.jdbc.Driver").newInstance();
            	Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
            	Statement stmt = con.createStatement();
            	String query = "SELECT SUM(customer_total) AS Total FROM item3 WHERE selling_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL WEEKDAY(CURRENT_DATE()) DAY) AND CURRENT_DATE();";
            	ResultSet rs = stmt.executeQuery(query);
            	while(rs.next())
            	{
            		String weeklySales = rs.getString("Total");
            		lblWeekly.setText("Php " + weeklySales + ".00");
            	}

            	rs.close();
            	stmt.close();
            	con.close();

        	}
        	catch(Exception e)
        	{
        		JOptionPane.showMessageDialog(this,"Error in connectivity");
        	}
        try {
        	Class.forName("com.mysql.jdbc.Driver").newInstance();
        	Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
        	Statement stmt = con.createStatement();
        	String query = "SELECT SUM(customer_total) AS Total FROM item3 WHERE selling_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL (DAYOFMONTH(CURRENT_DATE()-1)) DAY) AND CURRENT_DATE();";
        	ResultSet rs = stmt.executeQuery(query);
        	while(rs.next())
        	{
        		String monthlySales = rs.getString("Total");
        		lblMonthly.setText("Php " + monthlySales + ".00");
        	}

        	rs.close();
        	stmt.close();
        	con.close();

    	}
    	catch(Exception e)
    	{
    		JOptionPane.showMessageDialog(this,"Error in connectivity");
    	}
        try {
        	Class.forName("com.mysql.jdbc.Driver").newInstance();
        	Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
        	Statement stmt = con.createStatement();
        	String query = "SELECT SUM(customer_total) AS Total FROM item3 WHERE selling_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL (DAYOFYEAR(CURRENT_DATE()-1)) DAY) AND CURRENT_DATE();";
        	ResultSet rs = stmt.executeQuery(query);
        	while(rs.next())
        	{
        		String annualSales = rs.getString("Total");
        		lblAnnual.setText("Php " + annualSales + ".00");
        	}

        	rs.close();
        	stmt.close();
        	con.close();

    	}
    	catch(Exception e)
    	{
    		JOptionPane.showMessageDialog(this,"Error in connectivity");
    	}
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        dispose();
    }
    
    public void mySettings(){
        Dimension windowSize = getSize();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Point centerPoint = ge.getCenterPoint();

        int dx = centerPoint.x - windowSize.width / 2;
        int dy = centerPoint.y - windowSize.height / 2;    
        setLocation(dx, dy);
    }
    
    public void formLoad(){
    	try {
        	Class.forName("com.mysql.jdbc.Driver").newInstance();
        	Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://192.168.0.2/ken", "database", "");
        	Statement stmt = con.createStatement();
        	String query = "SELECT CURRENT_DATE() AS Daily, DATE_SUB(CURRENT_DATE(), INTERVAL WEEKDAY(CURRENT_DATE()) DAY) AS Weekly, DATE_SUB(CURRENT_DATE(), INTERVAL (DAYOFMONTH(CURRENT_DATE()-1)) DAY) AS Monthly, DATE_SUB(CURRENT_DATE(), INTERVAL (DAYOFYEAR(CURRENT_DATE()-1)) DAY) AS Annual";
        	ResultSet rs = stmt.executeQuery(query);
        	while(rs.next())
        	{
        		String dailyDate = rs.getString("Daily");
        		lblDailyDate.setText("Current Date : " + dailyDate);
        		String weeklyDate = rs.getString("Weekly");
        		lblWeeklyDate.setText("From " + weeklyDate + " to " + dailyDate);
        		String monthlyDate = rs.getString("Monthly");
        		lblMonthlyDate.setText("From " + monthlyDate + " to " + dailyDate);
        		String annualDate = rs.getString("Annual");
        		lblAnnualDate.setText("From " + annualDate + " to " + dailyDate);
        	}

        	rs.close();
        	stmt.close();
        	con.close();

    	}
    	catch(Exception e)
    	{
    		JOptionPane.showMessageDialog(this,"Error in connectivity");
    	}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sales_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sales_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sales_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sales_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sales_Report().setVisible(true);
            }
        });
    }

 // Variables declaration - do not modify                     
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblAnnual;
    private javax.swing.JLabel lblAnnualDate;
    private javax.swing.JLabel lblDaily;
    private javax.swing.JLabel lblDailyDate;
    private javax.swing.JLabel lblMonthly;
    private javax.swing.JLabel lblMonthlyDate;
    private javax.swing.JLabel lblWeekly;
    private javax.swing.JLabel lblWeeklyDate;
    // End of variables declaration                   
}
